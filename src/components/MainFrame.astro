---
import MemoQuestionMark from "../icons/QuestionMark";
import { Icon } from "astro-icon/components";
---

<section
  class="frame-section grid w-full grid-cols-1 place-content-center px-0 py-2 md:p-4"
>
  <div class="canvas-container h-[60vh] w-full overflow-hidden md:h-[80vh]">
  </div>

  <div
    class="flex w-fit items-center gap-2 bg-pure-black px-2 text-xxs text-pure-white dark:bg-pure-white dark:text-pure-black md:text-sm"
  >
    <span>#11 - Sol Lewitt (1969)</span>

    <a href="https://solvingsol.com/" target="_blank"
      ><Icon name="pixelarticons:external-link" /></a
    >
  </div>

  <style></style>
  <script>
    import p5 from "p5";
    import { gsap } from "gsap";
    import palletes from "nice-color-palettes";
    import Quadrant from "../utils/Quadrant";

    const canvasContainer = document.querySelector(
      ".canvas-container"
    ) as HTMLDivElement;

    const arrowIcon = document.querySelector(".sol-icon");
    const descriptionLink = document.querySelector(".sol-link");

    const h = canvasContainer?.clientHeight;

    const w = canvasContainer?.clientWidth;

    let middleY: number;
    let middleX: number;
    let aspectRatio: number;

    let pallete: string[];
    let distance: number;
    let distanceX: number;
    let distanceY: number;
    let Q1, Q2, Q3, Q4;

    new p5(function (p5) {
      p5.setup = function () {
        const cnv = p5.createCanvas(w, h);
        cnv.parent(canvasContainer);
        middleY = p5.height / 2;
        middleX = p5.width / 2;
        aspectRatio = p5.height / p5.width;
        pallete = p5.random(palletes);
        //p5.random(5)
        distance = 5; // the distance between the lines, default is 5
        distanceX = Math.round(middleX / distance);
        distanceY = Math.round(middleY / distance);

        if (Math.round(distanceX) !== distanceX) {
          let tmp = middleX / Math.round(distanceX);
          distanceX = tmp;
        }
        if (Math.round(distanceY) !== distanceY) {
          let tmp = middleY / Math.round(distanceY);
          distanceY = tmp;
        }
        // p5.filter(p5.GRAY);
        p5.noLoop();
      };
      p5.draw = function () {
        p5.clear();
        p5.background(p5.random(pallete) + "20");
        Q1 = new Quadrant(
          p5,
          0,
          0,
          middleX,
          middleY,
          distanceX,
          distanceY,
          aspectRatio,
          pallete
        );

        Q2 = new Quadrant(
          p5,
          middleX,
          0,
          p5.width,
          middleY,
          distanceX,
          distanceY,
          aspectRatio,
          pallete
        );
        Q3 = new Quadrant(
          p5,
          0,
          middleY,
          middleX,
          p5.height,
          distanceX,
          distanceY,
          aspectRatio,
          pallete
        );
        Q4 = new Quadrant(
          p5,
          middleX,
          middleY,
          p5.width,
          p5.height,
          distanceX,
          distanceY,
          aspectRatio,
          pallete
        );

        Q1.draw();
        Q2.draw();
        Q3.draw();
        Q4.draw();
      };

      p5.windowResized = function () {
        const w = canvasContainer?.clientWidth;
        const h = canvasContainer?.clientHeight;
        p5.resizeCanvas(w, h);

        middleY = p5.height / 2;
        middleX = p5.width / 2;
        aspectRatio = p5.height / p5.width;
        distanceX = Math.round(middleX / distance);
        distanceY = Math.round(middleY / distance);

        p5.clear();
        p5.redraw();
      };
    });

    gsap.from(".canvas-container", {
      autoAlpha: 0,
      duration: 2.5,
    });

    let arrowAnimation = gsap.to(arrowIcon, {
      ease: "sine.inOut",
      // paused: true,
      // rotate: "-405deg",
      rotate: "360deg",
      // repeat: -1,
      overwrite: true,
      // scale: 3,
    });

    descriptionLink?.addEventListener("mouseenter", () =>
      arrowAnimation.play()
    );
    descriptionLink?.addEventListener("mouseleave", () =>
      arrowAnimation.reverse()
    );
  </script>
</section>
