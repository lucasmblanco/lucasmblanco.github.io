---
import Icon from "astro-icon";

import Wrapper from "./Wrapper.astro";
// md:h-[43.7rem] md:w-[25rem] md:w-[100rem]
// md:w-[25rem] ; h-[30rem]
// mx-auto w-[1000px] rounded-lg px-4 md:h-[43.7rem]
// SECTION OLD -> class="grid place-content-center gap-5 border-b-[1px] border-pure-black dark:border-pure-white md:gap-10"
---

<section class="grid place-content-center gap-5 md:gap-10">
  <div class="canvas-container h-[60vh]"></div>
  <Wrapper title="Info">
    <a
      href="https://solvingsol.com/"
      target="_blank"
      class="sol-link h-fit fill-pure-black dark:fill-pure-white"
      slot="right-icon"
      ><Icon class="sol-icon h-2 w-2 md:h-3 md:w-3" name="question_mark" /></a
    >
    <div
      class="grid w-full grid-cols-2 items-center justify-center gap-[1px] bg-pure-black dark:bg-pure-white md:grid-flow-col md:gap-[2px]"
      slot="content"
    >
      <div
        class="grid h-full grow place-content-center bg-pure-white p-1 text-center dark:dark:bg-pure-black"
      >
        <h2 class="text-base md:text-3xl">Wall Drawing #11</h2>
        <div class="text-xs md:text-sm">
          <span>(1969)</span>
          <span class="text-center">Sol LeWitt</span>
        </div>
      </div>
      <div class="h-full grow bg-pure-white text-center dark:bg-pure-black">
        <blockquote class="p-1 text-smoll md:whitespace-pre-line">
          A wall divided horizontally and vertically into four equal parts.
          Within each part, three of the four kinds of lines are superimposed.
        </blockquote>
      </div>
    </div>
  </Wrapper>
</section>
<style is:global>
  canvas {
    border-radius: 8px;
  }
</style>
<script>
  import p5 from "p5";
  import { gsap } from "gsap";
  import palletes from "nice-color-palettes";
  import Quadrant from "../utils/Quadrant";

  const root = document.querySelector("html");
  const canvasContainer = document.querySelector(
    ".canvas-container",
  ) as HTMLDivElement;
  const mainContainer = document.querySelector("main") as HTMLDivElement;
  const arrowIcon = document.querySelector(".sol-icon");
  const descriptionLink = document.querySelector(".sol-link");

  const h = canvasContainer?.offsetHeight;

  const w = mainContainer?.clientWidth;

  let middleY: number;
  let middleX: number;
  let aspectRatio: number;

  let pallete: string[];
  let distance: number;
  let distanceX: number;
  let distanceY: number;
  let Q1, Q2, Q3, Q4;

  new p5(function (p5) {
    p5.setup = function () {
      const cnv = p5.createCanvas(w, h);
      cnv.parent(canvasContainer);
      middleY = p5.height / 2;
      middleX = p5.width / 2;
      aspectRatio = p5.height / p5.width;
      pallete = p5.random(palletes);
      distance = Math.round(p5.random(4, 20));
      distanceX = middleX / distance;
      distanceY = Math.round(middleY / distance);

      if (Math.round(distanceX) !== distanceX) {
        let tmp = middleX / Math.round(distanceX);
        distanceX = tmp;
      }
      if (Math.round(distanceY) !== distanceY) {
        let tmp = middleY / Math.round(distanceY);
        distanceY = tmp;
      }
      p5.filter(p5.GRAY);
      p5.noLoop();
    };
    p5.draw = function () {
      p5.clear();
      // p5.background(p5.random(pallete) + "A0");
      Q1 = new Quadrant(
        p5,
        0,
        0,
        middleX,
        middleY,
        distanceX,
        distanceY,
        aspectRatio,
        pallete,
      );

      Q2 = new Quadrant(
        p5,
        middleX,
        0,
        p5.width,
        middleY,
        distanceX,
        distanceY,
        aspectRatio,
        pallete,
      );
      Q3 = new Quadrant(
        p5,
        0,
        middleY,
        middleX,
        p5.height,
        distanceX,
        distanceY,
        aspectRatio,
        pallete,
      );
      Q4 = new Quadrant(
        p5,
        middleX,
        middleY,
        p5.width,
        p5.height,
        distanceX,
        distanceY,
        aspectRatio,
        pallete,
      );

      Q1.draw();
      Q2.draw();
      Q3.draw();
      Q4.draw();
    };

    p5.windowResized = function () {
      const w = mainContainer?.clientWidth;
      const h = canvasContainer?.offsetHeight;
      p5.resizeCanvas(w, h);

      middleY = p5.height / 2;
      middleX = p5.width / 2;
      aspectRatio = p5.height / p5.width;
      distanceX = Math.round(middleX / distance);
      distanceY = Math.round(middleY / distance);

      p5.clear();
      p5.redraw();
    };
  });

  gsap.from(".canvas-container", {
    autoAlpha: 0,
    duration: 2.5,
  });

  let arrowAnimation = gsap.to(arrowIcon, {
    ease: "sine.inOut",
    // paused: true,
    // rotate: "-405deg",
    rotate: "360deg",
    // repeat: -1,
    overwrite: true,
    // scale: 3,
  });

  descriptionLink?.addEventListener("mouseenter", () => arrowAnimation.play());
  descriptionLink?.addEventListener("mouseleave", () =>
    arrowAnimation.reverse(),
  );
</script>

<!-- <div
class="draw-description flex w-full flex-col items-center justify-center gap-[1px] border-[1px] border-pure-black bg-pure-black outline outline-[1px] outline-offset-1 dark:border-pure-white dark:bg-pure-white md:grid-flow-col md:gap-[2px] md:border-2 md:outline-2 md:outline-offset-2"
>
<div
  class="flex w-full grow justify-end bg-pure-white p-[2px] dark:bg-pure-black"
>
  <a
    href="https://solvingsol.com/"
    target="_blank"
    class="sol-link bg-red-500 fill-pure-black dark:fill-pure-white"
    ><Icon class="sol-icon w-2 md:w-3" name="question_mark" /></a
  >
</div>
<div
  class="flex w-full flex-col justify-center gap-[1px] md:flex-row md:gap-[2px]"
>
  <div
    class="grid grow place-content-center bg-pure-white p-1 text-center dark:dark:bg-pure-black"
  >
    <h2 class="text-base md:text-3xl">Wall Drawing #11</h2>
    <div class="text-xs md:text-sm">
      <span>(1969)</span>
      <span class="text-center">Sol LeWitt</span>
    </div>
  </div>
  <div class="grow bg-pure-white text-center dark:bg-pure-black">
    <blockquote class="p-1 text-smoll md:whitespace-pre-line">
      A wall divided horizontally and vertically into four equal parts.
      Within each part, three of the four kinds of lines are superimposed.
    </blockquote>
  </div>
</div>
</div> -->
